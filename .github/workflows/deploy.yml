name: Deploy to Supabase

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Supabase CLI
        run: |
          curl -fsSL https://raw.githubusercontent.com/supabase/cli/main/scripts/install.sh | sh
          echo "/home/runner/.supabase/bin" >> $GITHUB_PATH

      - name: Deploy to Supabase
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: |
          # Determine environment based on branch
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "Deploying to production..."
            ENVIRONMENT="production"
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            echo "Deploying to staging..."
            ENVIRONMENT="staging"
          else
            echo "Deploying preview branch..."
            ENVIRONMENT="preview"
          fi
          
          # Link to Supabase project
          supabase link --project-ref $SUPABASE_PROJECT_ID --password $SUPABASE_DB_PASSWORD
          
          # Push database changes
          if [[ "$ENVIRONMENT" != "preview" ]]; then
            supabase db push --linked
          fi
          
          # Deploy edge functions if any
          if [ -d "supabase/functions" ]; then
            supabase functions deploy --linked
          fi

  migrate-prisma:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Generate Prisma Client
        run: bun run prisma:generate

      - name: Deploy Prisma Migrations
        env:
          DATABASE_URL: ${{ github.ref == 'refs/heads/main' && secrets.DATABASE_URL_PRODUCTION || secrets.DATABASE_URL_STAGING }}
        run: |
          echo "Deploying Prisma migrations..."
          bunx prisma migrate deploy